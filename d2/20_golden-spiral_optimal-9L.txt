> Query: Read the input value and output the whole Fibonacci sequence
> up to (but not exceeding) that number.
> Example:
> [input: 64]
> [output: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]
// Similar to the previous solution.  However, instead of
// using the floor(x) function for rounding, we exploit
// how floating point numbers are rounded by the game.
// Given a number having at least 3 decimal places, the
// game rounds the floating point number to 2 decimal
// places.  The rounding rule is "round half up" or
// "round half toward positive infinity".  To exploit this
// behaviour, we multiply F_n by phi/100, then multiply
// the result by 100 to obtain F_{n+1}.  This solution is
// optimal, according to the game.
int = input;              // Read the max value.
reg = 1;                  // First Fibonacci number F_0.
output = reg;             // Print F_0.
loop:                     // Start of "loop".
    output = reg;         // Print F_n.
    reg = reg * 0.0162;   // f := (phi/100) * F_n
    reg = reg * 100;      // F_{n+1} := 100*f
    check reg > int;      // Is F_{n+1} > max value?
    jump if false: loop;  // If not, go to "loop".
