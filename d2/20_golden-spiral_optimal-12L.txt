> Query: Read the input value and output the whole Fibonacci sequence
> up to (but not exceeding) that number.
> Example:
> [input: 64]
> [output: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]
// Let F_n be the n-th Fibonacci number and let phi be the
// golden ratio, i.e. phi := 1.618033988749...  Then the
// Fibonacci sequence follows the recurrence relation
//
// F_{n+1} := floor(phi*F_n + 0.5)
//
// where floor(x) is the floor function.  See
//
// https://mathworld.wolfram.com/FibonacciNumber.html
//
// Essentially, we are rounding phi*F_n to the nearest
// integer, where the rounding rule is "round half up",
// also known as "round half toward positive infinity".
// This solution is optimal, according to the game.
int = input;              // Read the max value.
reg = 1;                  // First Fibonacci number F_0.
output = reg;             // Print F_0.
loop:                     // Start of "loop".
    output = reg;         // Print F_n.
    reg = reg * 1.618;    // phi * F_n
    switch int;           // Store max value.
    int = reg + 0.5;      // floor(phi*F_n + 0.5)
    reg = int;            // Copy result to register "reg".
    switch int;           // Retrieve max value.
    check reg > int;      // Is F_n > max value?
    jump if false: loop;  // If not, go to "loop".
