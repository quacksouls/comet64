> Query: Input contains rock, paper, or scissors.  Read a value from input,
> compare it to the next input and output the winner of the
> rock-paper-scissors game.  If there is no winner, output "draw".
// Similar to the previous solution.  However, instead of
// calculating the difference, we calculate the addition of
// the integer values of both strategies.  Use the following
// abbreviations and integer values:
//
// p := paper, 16
// r := rock, 18
// s := scissors, 19
//
// The winners are:
//
// paper := 16 + 18 = 34
// rock := 18 + 19 = 37
// scissors := 16 + 19 = 35
// draw := both strategies are the same
//
// We also first check to see whether both strategies are the
// same.  This solution is optimal, according to the game.
loop:                        // Start of "loop".
    str = input;             // Read first strategy.
    char = str[0];           // Abbreviation of strategy.
    reg = char;              // Integer value of strategy.
    str = input;             // Read second strategy.
    char = str[0];           // Abbreviation of strategy.
    int = char;              // Integer value of strategy.
    check int = reg;         // Both strategies the same?
    jump if true: draw;      // If so, go to "draw".
    int = reg + int;         // Addition of strategy codes.
    check int = 34;          // Is paper the winner?
    jump if true: paper;     // If so, go to "paper".
    check int = 37;          // Is rock the winner?
    jump if true: rock;      // If so, go to "rock".
    output = scissors;       // Scissors is the winner.
    jump to: loop;           // Go to "loop".
paper:                       // The "paper" branch.
    output = paper;          // Paper wins.
    jump to: loop;           // Go to "loop".
rock:                        // The "rock" branch.
    output = rock;           // Rock wins.
    jump to: loop;           // Go to "loop".
draw:                        // The "draw" branch.
    output = draw;           // A draw.
