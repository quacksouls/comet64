> Query: Read 3 input values in a row.  Output the middle of 3 numbers.
> Repeat.
// Let x, y, z be three numbers.  We have these cases:
//
// (1) x < y and y < z, so middle is y.
// (2) x < y, z <= y, x < z, so middle is z.
// (3) x < y, z <= y, z <= x, so middle is x.
// (4) y <= x and x < z, so middle is x.
// (5) y <= x, z <= x, y < z, so middle is z.
// (6) y <= x, z <= x, z <= y, so middle is y.
int = input;              // Read in x.
reg = input;              // Read in y.
check int < reg;          // Is x < y?
jump if false: yltx;      // If not, then y <= x.
switch int;               // Store x.
int = input;              // Read in z.
check reg < int;          // Is y < z?
jump if false: zlty;      // If not, then z <= y.
output = reg;             // Case (1), y middle.
jump to: end;             // Go to "end".
yltx:                     // y <= x
    switch reg;           // Store y.
    reg = input;          // Read in z.
    check int < reg;      // Is x < z?
    jump if true: xltz;   // If so, then x < z.
    switch int;           // Retrieve y.
    check int < reg;      // Is y < z?
    jump if true: yltz;   // If so, then y < z.
    output = int;         // Case (6), y middle.
    jump to: end;         // Go to "end".
zlty:                     // z <= y
    switch reg;           // Retrieve x.
    check reg < int;      // Is x < z?
    jump if false: zltx;  // If not, then z <= x.
    output = int;         // Case (2), z middle.
    jump to: end;         // Go to "end".
zltx:                     // z <= x
    output = reg;         // Case (3), x middle.
    jump to: end;         // Go to "end".
xltz:                     // x < z
    output = int;         // Case (4), x middle.
    jump to: end;         // Go to "end".
yltz:                     // y < z
    output = reg;         // Case (5), z middle.
end:                      // End of program.
