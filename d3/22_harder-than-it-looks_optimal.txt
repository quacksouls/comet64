> Query: Input contains random decimal values.  For each value x, output
> [x * (x - 1)].
> Example:
> [input: 4.2, output: 13.44]
// Let x be a floating point number with one digit after the
// decimal point.  Write the expression x * (x - 1) as
//
// [10*x * 10*(x - 1)] / 100
//
// Store 10*x in the "reg" register.  The expression
// 10 * (x - 1) = 10*x - 10 is an integer so it can be stored
// in the "int" register.  Multiply the values of "reg" and
// "int" and store the result in "reg".  To recover the
// original expression, we must divide by 100 and use the
// floating point value.  This solution is optimal, according
// to the game.
reg = 10 * input;  // 10*x
int = reg - 10;    // 10*x - 10
reg = reg * int;   // 10*x * 10*(x - 1)
reg = reg / 100;   // [10*x * 10*(x - 1)] / 100
output = reg;      // Print result.
